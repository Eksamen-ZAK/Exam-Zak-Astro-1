---
interface Props {
  label: string;
  id: string;
  type: any;
  pattern?: string;
  title?: string;
  required: boolean;
  variant?: string;
  icon?: string;
}

const { label, id, type, variant, icon, required = false } = Astro.props;
---

<label for={id}
  >{label}{
    icon && <img class={icon} src={`../assets/${icon}.svg`} alt={icon} />
  }</label
>
<div class={variant}>
  <input class={variant && variant} id={id} name={id} type={type} required />
  {variant === "password" && <div class="password-on" id={`${id}-button`} />}
</div>

<style>
  input:focus {
    outline: none;
  }
  input {
    height: 40px;
    background: var(--alternative-bg-color);
    margin-bottom: 29px;
    border-radius: 10px;
    border: 0;
    font-size: var(--fs-m);
    padding-left: 12px;
  }
  label {
    display: flex;
    align-items: center;
    font-size: var(--fs-m);
    font-family: var(--main-font);
    font-weight: var(--fw-b);
  }
  img {
    margin-left: 5px;
    margin-bottom: 5px;
    cursor: pointer;
  }
  .fullWidth {
    width: 100%;
    margin-bottom: 10px;
  }
  div {
    position: relative;
    display: flex;
    width: 100%;
    > input {
      width: 100%;
    }
  }
  .password {
    width: 315px;
  }

  .password-off {
    width: 25px;
    height: 26px;
    background-image: url(/assets/eye-on.svg);
    object-fit: contain;
    background-repeat: no-repeat;
    position: absolute;
    right: 5%;
    top: 35%;
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    cursor: pointer;
  }
  .password-on {
    width: 25px;
    height: 26px;
    background-image: url(/assets/eye-off.svg);
    object-fit: contain;
    background-repeat: no-repeat;
    position: absolute;
    right: 5%;
    top: 35%;
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    cursor: pointer;
  }
</style>
