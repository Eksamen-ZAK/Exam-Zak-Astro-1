---
let headersList = {
  apikey:
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpsZ3N4aXlud3F2dmh3aGVleHdvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTQ0NzA5MjksImV4cCI6MjAzMDA0NjkyOX0.U40ZZWRh_MC7612vdwFHVKFZxwRHq_TECCnnzovEXKE",
};

let response = await fetch(
  "https://jlgsxiynwqvvhwheexwo.supabase.co/rest/v1/exercises",
  {
    method: "GET",
    headers: headersList,
  }
);

let data = await response.json();

import Layout from "../layouts/Layout.astro";
import Menu from "../components/Menu.astro";
import GoalModal from "../components/GoalModal.astro";
---

<Layout title="Gemte programmer">
  <main>
    <Menu />
    <GoalModal />
    <div>
      <h1>Dine programmer</h1>
      <p>
        Disse programmer er nogle du eller din tilknyttede terapeut tidligere
        har sammensat.
      </p>
      <div class="program-list">
        <button class="new-program"
          ><div>
            <img src="/assets/plus-circle.svg" alt="plus circle icon" />
            <p>Lav nyt program</p>
          </div></button
        >
        <template class="card-template">
          <article class="program-card">
            <div class="image-container">
              <img class="program-image" src="" alt="program image" />
            </div>
            <div class="text-container">
              <h2 class="program-title"></h2>
              <p class="program-description"></p>
              <div class="functions-list">
                <button class="set-goal">
                  <img src="/assets/target-icon.png" alt="mål ikon" /><p>
                    Tilføj målsætning
                  </p>
                </button>
                <button class="edit">
                  <img src="/assets/pen-black.svg" alt="pen ikon" /><p>
                    Rediger
                  </p>
                </button>
              </div>
              <div class="buttons">
                <button type="button" class="fullWidth red small delete">
                  <p>Slet</p>
                  <div class="icon" id="trashcan"></div></button
                >
                <button type="button" class="fullWidth green small play">
                  <p>Afspil</p>
                  <div class="icon" id="play"></div></button
                >
              </div>
            </div>
          </article>
        </template>
      </div>
    </div>
  </main>
  <script src=`../js/generel.js`></script>
  <script src=`../js/saved-programs.js`></script>
</Layout>

<script>
  const button = document.querySelector(".new-program");

  button.addEventListener(
    "click",
    () => (window.location.href = `/lav-dit-program`)
  );
</script>

<style>
  main {
    margin-top: 50px;
  }
  div:has(h1) {
    padding: 0 40px 20px 40px;
    max-width: 1148px;
  }

  h1 {
    font-size: var(--fs-l);
    font-family: var(--main-font);
    font-weight: var(--fw-b);
    margin-bottom: 6px;
  }
  p {
    margin-bottom: 16px;
    font-size: var(--fs-m);
    font-family: var(--main-font);
    font-weight: var(--fw-n);
  }
  .new-program {
    width: 264px;
    height: 100%;
    min-height: 380px;
    padding: 16px;
    border: 2px dashed var(--secondary-color);
    border-radius: 10px;
    background-color: var(--main-bg-color);
    cursor: "pointer";
    &:hover {
      background-color: var(--alternative-bg-color);
    }
  }
  button div > p {
    font-family: var(--main-font);
    font-size: var(--fs-m);
    font-weight: var(--fw-l);
    color: var(--secondary-color);
  }
  .program-list {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
    max-width: 1180px;
  }

  article {
    width: 264px;
    max-height: 700px;
    padding: 16px;
  }
  .image-container {
    width: 252px;
    height: 180px;
  }
  .program-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    margin-bottom: 27px;
  }
  .program-title {
    font-family: var(--main-font);
    font-size: var(--fs-ml);
    font-weight: var(--fw-b);
    margin-bottom: 3px;
  }
  .program-description {
    font-family: var(--main-font);
    font-size: var(--fs-m);
    font-weight: var(--fw-l);
  }
  .text-container {
    padding: 0 15px;
    margin-bottom: 12px;
  }
  .functions-list {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 20px;
    margin-bottom: 26px;
    > button {
      display: flex;
      gap: 13px;
      align-items: center;
      height: 31px;
      background-color: transparent;
      border: 0;
      padding: 0;
      > p {
        font-size: var(--fs-m);
        font-family: var(--main-font);
        font-weight: var(--fw-l);
      }
      > img {
        width: 30px;
        height: 30px;
      }
    }
  }
  .buttons {
    display: flex;
    width: 225px;
    gap: 7px;
    margin: 0 auto;
  }

  button {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 4px;
    height: 31px;
    padding: 6px 15px;
    border-radius: 10px;
    cursor: pointer;
    > p {
      margin-top: 15px;
      font-size: var(--fs-m);
      font-family: var(--main-font);
    }
  }

  .fullWidth {
    width: 100%;
    flex-grow: 1;
  }

  .red {
    color: var(--main-bg-color);
    background-color: var(--primary-color);
    border: 2px solid var(--primary-color);
    > #trashcan {
      background-image: url(/assets/trashcan-white.svg);
    }
  }
  .red:hover {
    color: var(--primary-color);
    background-color: var(--main-bg-color);
    border: 2px solid var(--primary-color);
    > #trashcan {
      background-image: url(/assets/trashcan-red.svg);
    }
  }
  .green {
    color: var(--main-bg-color);
    background-color: var(--secondary-color);
    border: 2px solid var(--secondary-color);
  }
  .green:hover {
    color: var(--secondary-color);
    background-color: var(--main-bg-color);
    border: 2px solid var(--secondary-color);
    > #play {
      background-image: url(/assets/play-icon-green.svg);
    }
  }

  #play {
    background-image: url(/assets/play-icon-white.svg);
  }

  .icon {
    width: 17px;
    height: 17px;
    background-size: contain;
  }

  .small {
    height: 33px;
    > p {
      padding-top: 6px;
      font-size: 20px;
    }
  }

  /* --- Når iPad'en er i portræt / vertikal orientation --- */
  @media (min-width: 768px) and (orientation: portrait) {
    .program-list {
      grid-template-columns: repeat(2, 1fr);
      justify-items: center;
    }
  }
  @media (min-width: 768px) {
    .program-list {
      grid-template-columns: repeat(2, 1fr);
      justify-items: center;
    }
  }
  /* --- Når iPad'en er i landscape / horisontal orientation --- */
  @media (min-width: 1024px) and (orientation: landscape) {
    .program-list {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
